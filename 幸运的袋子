#include<iostream>
#include<algorithm>
using namespace std;
//如果a1、a2..ak不满足sum>mult，如果此时在选择一个数b，其满足sum+b>mult*b,则b必然为1
//袋子中必须有1
//先要对其进行排序，才能进行剪枝（就是碰到不满足条件的，不会执行其后面的，返回到上一层）
//用递归做这道题
int n;
int  *x=NULL;
int Count(int pos,int sum,int mul)
{
    int count=0;//计算次数
    for(int i=pos;i<n;i++)
    {
        sum+=x[i];
        mul*=x[i];
        
        if(sum>mul)
            count+=1+Count(i+1,sum,mul);
        else if(x[i]==1)
            count+=Count(i+1,sum,mul);//不+1是因为count是最后符合条件的总数
        else
            break;//不符合
        
        //走到这里说明遇到了不符合的，则的把之前加上的减去
        sum-=x[i];
        mul/=x[i];
        
       while(x[i+1]==x[i]&&i+1<n)
            i++;
    }
    return count;
}
int main()
{
    
    cin>>n;
    x=new int[n];
    int sum=0;//和
    long long mul=1;//积
    for(int i=0;i<n;i++)
    {
        cin>>x[i];
    }
    
    sort(x,x+n);//排序
    int num=Count(0,sum,mul);
    cout<<num;
    
    //释放空间，以防栈溢出
    if(x!=NULL)
    {
        delete []x;
        x=NULL;
    }
    return 0;
}
